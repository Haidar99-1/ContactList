{"ast":null,"code":"var _jsxFileName = \"/Users/haidar/Desktop/crud-app/client/src/component/Search.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SearchBar from \"../component/searchBar\";\nimport Contact from \"../component/contact\";\nimport UseFetch from \"../hooks/useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [userSearch, setUserSearch] = useState(\"\");\n  const [searchResults, setsearchResults] = useState(\"\");\n  const [userHasSearched, setUserHasSearched] = useState(false);\n  const url = 'http://localhost:3001/getUsers';\n  const [contactData, error] = UseFetch(url);\n\n  // console.log(contactData)\n\n  function filterContactData(searchTerm) {\n    setUserHasSearched(true);\n    setUserSearch(searchTerm);\n    let filteredResults;\n    if (searchTerm == \"\") {\n      filteredResults = [];\n      setUserHasSearched(false);\n    } else {\n      filteredResults = contactData.map(contact => {\n        return contact.first_name.includes(searchTerm) || contact.last_name.includes(searchTerm);\n      });\n    }\n    setsearchResults(filteredResults);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchValue: userSearch,\n      searchValueFunction: filterContactData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"flex justify-center my-4\",\n      children: userHasSearched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: searchResults.length > 0 ? \"hidden\" : \"bg-red-100 border border-red-400 text bg-red-700 md:w-2/5 lg:max-w-md px-4 rounded-md\",\n          role: \"alert\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Sorry!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), \" There are no contacts with the name of \", \"\", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: userSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: searchResults.length > 0 ? \"grid grid-cols-3 gap-2 place-items-center\" : \"hidden\",\n          children: searchResults.localeCompare(contact => {\n            return /*#__PURE__*/_jsxDEV(Contact, {\n              name: `${contact.first_name} ${contact.last_name}`,\n              telNumber: contact.telphone,\n              company: contact.company,\n              email: contact.email\n            }, contact._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 gap-2 place-items-center\",\n        children: contactData.map(contact => {\n          return /*#__PURE__*/_jsxDEV(Contact, {\n            name: `${contact.first_name} ${contact.last_name}`,\n            telNumber: contact.telphone,\n            company: contact.company,\n            email: contact.email\n          }, contact._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"0VKTg/gmYuIetxr97Cpgt3hapFg=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","useEffect","SearchBar","Contact","UseFetch","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","_s","userSearch","setUserSearch","searchResults","setsearchResults","userHasSearched","setUserHasSearched","url","contactData","error","filterContactData","searchTerm","filteredResults","map","contact","first_name","includes","last_name","children","searchValue","searchValueFunction","fileName","_jsxFileName","lineNumber","columnNumber","className","length","role","localeCompare","name","telNumber","telphone","company","email","_id","_c","$RefreshReg$"],"sources":["/Users/haidar/Desktop/crud-app/client/src/component/Search.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SearchBar from \"../component/searchBar\"\nimport Contact from \"../component/contact\"\nimport UseFetch from \"../hooks/useFetch\"\n\nexport default function Search() {\n    const [userSearch, setUserSearch] = useState(\"\");\n    const [searchResults, setsearchResults] = useState(\"\");\n    const [userHasSearched, setUserHasSearched] = useState(false);\n    const url = 'http://localhost:3001/getUsers'\n    const [contactData, error] = UseFetch(url)\n\n    // console.log(contactData)\n\n    function filterContactData(searchTerm) {\n        setUserHasSearched(true);\n        setUserSearch(searchTerm);\n\n        let filteredResults;\n\n        if (searchTerm == \"\") {\n            filteredResults = [];\n            setUserHasSearched(false);\n        }else {\n            filteredResults = contactData.map((contact) => {\n                return (\n                    contact.first_name.includes(searchTerm) ||\n                    contact.last_name.includes(searchTerm)\n                );\n            });\n        }\n        setsearchResults(filteredResults)\n    }\n\n    return (\n        <div>\n            <SearchBar \n            searchValue={userSearch}\n            searchValueFunction={filterContactData}/>\n    \n        <section className=\"flex justify-center my-4\">\n            {userHasSearched ? (\n                <>\n                    <div className={\n                        searchResults.length > 0\n                            ? \"hidden\" :\n                            \"bg-red-100 border border-red-400 text bg-red-700 md:w-2/5 lg:max-w-md px-4 rounded-md\"\n                    } role=\"alert\"\n                    >\n                        <p className=\"text-center\">\n                            <strong>Sorry!</strong> There are no contacts with the name of {\"\"}\n                            <strong>{userSearch}</strong>\n                        </p>\n                    </div>\n                    <div className={searchResults.length > 0\n                        ? \"grid grid-cols-3 gap-2 place-items-center\"\n                        : \"hidden\"\n                    }\n                    >\n                        {searchResults.localeCompare((contact) => {\n                            return (\n                                <Contact\n                                    key={contact._id}\n                                    name={`${contact.first_name} ${contact.last_name}`}\n                                    telNumber={contact.telphone}\n                                    company={contact.company}\n                                    email={contact.email}\n                                />\n\n                            );\n                        })}\n\n                    </div>\n                </>\n\n            ) : (\n                <div className=\"grid grid-cols-3 gap-2 place-items-center\">\n                    {\n                        contactData.map((contact) => {\n                            return (\n                                <Contact\n                                    key={contact._id}\n                                    name={`${contact.first_name} ${contact.last_name}`}\n                                    telNumber={contact.telphone}\n                                    company={contact.company}\n                                    email={contact.email}\n                                />\n                            );\n                        })}\n                </div>\n            )}\n        </section>\n        </div>\n        \n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}